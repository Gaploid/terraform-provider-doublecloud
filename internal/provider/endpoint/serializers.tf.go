// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cloud/doublecloud/public-api/doublecloud/transfer/v1/endpoint/serializers.proto

package endpoint

import (
	fmt "fmt"
	"google.golang.org/protobuf/proto"
	math "math"

	schema "github.com/hashicorp/terraform-plugin-framework/provider/schema"
	types "github.com/hashicorp/terraform-plugin-framework/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SerializerAuto_TF struct with tfsdk field SerializerAuto SerializerAuto
type SerializerAuto_TF struct {
	active types.Bool `tfsdk:"active",json:"active"`
}

func GenTFSchemaSerializerAuto() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{"active": schema.BoolAttribute{
		Description: "Automatically generated field preventing empty message errors",
		Optional:    true,
	}}}
}

// SerializerJSON_TF struct with tfsdk field SerializerJSON SerializerJSON
type SerializerJSON_TF struct {
	active types.Bool `tfsdk:"active",json:"active"`
}

func GenTFSchemaSerializerJSON() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{"active": schema.BoolAttribute{
		Description: "Automatically generated field preventing empty message errors",
		Optional:    true,
	}}}
}

// DebeziumSerializerParameter_TF struct with tfsdk field DebeziumSerializerParameter DebeziumSerializerParameter
type DebeziumSerializerParameter_TF struct {
	Key   types.String `tfsdk:"key",json:"key"`
	Value types.String `tfsdk:"value",json:"value"`
}

func GenTFSchemaDebeziumSerializerParameter() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"key": schema.StringAttribute{
			Description: "Name of the serializer parameter",
			Optional:    true,
		},
		"value": schema.StringAttribute{
			Description: "Value of the serializer parameter",
			Optional:    true,
		},
	}}
}

// SerializerDebezium_TF struct with tfsdk field SerializerDebezium SerializerDebezium
type SerializerDebezium_TF struct {
	SerializerParameters *DebeziumSerializerParameter_TF `tfsdk:"serializer_parameters",json:"serializer_parameters"`
}

func GenTFSchemaSerializerDebezium() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{"serializer_parameters": schema.SingleNestedAttribute{
		Attributes:  GenTFSchemaDebeziumSerializerParameter().Attributes,
		Description: "Settings of sterilization parameters as key-value pairs",
		Optional:    true,
	}}}
}

// Serializer_TF struct with tfsdk field Serializer Serializer
type Serializer_TF struct {
	SerializerAuto     *SerializerAuto_TF     `tfsdk:"serializer_auto",json:"serializer_auto"`
	SerializerJson     *SerializerJSON_TF     `tfsdk:"serializer_json",json:"serializer_json"`
	SerializerDebezium *SerializerDebezium_TF `tfsdk:"serializer_debezium",json:"serializer_debezium"`
}

func GenTFSchemaSerializer() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"serializer_auto": schema.SingleNestedAttribute{
			Attributes:  GenTFSchemaSerializerAuto().Attributes,
			Description: "Select the serialization format automatically",
			Optional:    true,
		},
		"serializer_debezium": schema.SingleNestedAttribute{
			Attributes:  GenTFSchemaSerializerDebezium().Attributes,
			Description: "Serialize data in debezium format",
			Optional:    true,
		},
		"serializer_json": schema.SingleNestedAttribute{
			Attributes:  GenTFSchemaSerializerJSON().Attributes,
			Description: "Serialize data in json format",
			Optional:    true,
		},
	}}
}
