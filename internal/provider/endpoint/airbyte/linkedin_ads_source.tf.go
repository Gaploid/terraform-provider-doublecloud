// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cloud/doublecloud/public-api/doublecloud/transfer/v1/endpoint/airbyte/linkedin_ads_source.proto

package endpoint_airbyte

import (
	fmt "fmt"
	"google.golang.org/protobuf/proto"
	math "math"

	schema "github.com/hashicorp/terraform-plugin-framework/provider/schema"
	types "github.com/hashicorp/terraform-plugin-framework/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// OAuth_TF struct with tfsdk field OAuth LinkedinAdsSource.credentials.oauth
type LinkedInOAuth_TF struct {
	ClientId     types.String `tfsdk:"client_id",json:"client_id"`
	ClientSecret types.String `tfsdk:"client_secret",json:"client_secret"`
	RefreshToken types.String `tfsdk:"refresh_token",json:"refresh_token"`
}

func GenTFLinkedInSchemaOAuth() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"client_id": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"client_secret": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"refresh_token": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
	}}
}

// Credentials_TF struct with tfsdk field Credentials LinkedinAdsSource.credentials
type LinkedInCredentials_TF struct {
	Oauth       *OAuth_TF    `tfsdk:"oauth",json:"oauth"`
	AccessToken types.String `tfsdk:"access_token",json:"access_token"`
}

func GenTFSchemaLinkedInCredentials() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"access_token": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"oauth": schema.SingleNestedAttribute{
			Attributes:  GenTFSchemaOAuth().Attributes,
			Description: "",
			Optional:    true,
		},
	}}
}

// LinkedinAdsSource_TF struct with tfsdk field LinkedinAdsSource LinkedinAdsSource
type LinkedinAdsSource_TF struct {
	StartDate   types.String            `tfsdk:"start_date",json:"start_date"`
	AccountIds  types.Int64             `tfsdk:"account_ids",json:"account_ids"`
	Credentials *LinkedInCredentials_TF `tfsdk:"credentials",json:"credentials"`
}

func GenTFSchemaLinkedinAdsSource() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"account_ids": schema.Int64Attribute{
			Description: "",
			Optional:    true,
		},
		"credentials": schema.SingleNestedAttribute{
			Attributes:  GenTFSchemaLinkedInCredentials().Attributes,
			Description: "",
			Optional:    true,
		},
		"start_date": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
	}}
}
