// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cloud/doublecloud/public-api/doublecloud/transfer/v1/endpoint/airbyte/google_ads_source.proto

package endpoint_airbyte

import (
	fmt "fmt"
	"google.golang.org/protobuf/proto"
	math "math"

	schema "github.com/hashicorp/terraform-plugin-framework/provider/schema"
	types "github.com/hashicorp/terraform-plugin-framework/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// CustomQuery_TF struct with tfsdk field CustomQuery GoogleAdsSource.custom_queries
type CustomQuery_TF struct {
	Query     types.String `tfsdk:"query",json:"query"`
	TableName types.String `tfsdk:"table_name",json:"table_name"`
}

func GenTFSchemaCustomQuery() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"query": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"table_name": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
	}}
}

// GoogleAdsSource_TF struct with tfsdk field GoogleAdsSource GoogleAdsSource
type GoogleAdsSource_TF struct {
	CustomerId           types.String    `tfsdk:"customer_id",json:"customer_id"`
	StartDate            types.String    `tfsdk:"start_date",json:"start_date"`
	EndDate              types.String    `tfsdk:"end_date",json:"end_date"`
	CustomQueries        *CustomQuery_TF `tfsdk:"custom_queries",json:"custom_queries"`
	LoginCustomerId      types.String    `tfsdk:"login_customer_id",json:"login_customer_id"`
	ConversionWindowDays types.Float64   `tfsdk:"conversion_window_days",json:"conversion_window_days"`
}

func GenTFSchemaGoogleAdsSource() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"conversion_window_days": schema.Float64Attribute{
			Description: "",
			Optional:    true,
		},
		"custom_queries": schema.SingleNestedAttribute{
			Attributes:  GenTFSchemaCustomQuery().Attributes,
			Description: "",
			Optional:    true,
		},
		"customer_id": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"end_date": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"login_customer_id": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"start_date": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
	}}
}

// Credentials_TF struct with tfsdk field Credentials Credentials
type Credentials_TF struct {
	DeveloperToken types.String `tfsdk:"developer_token",json:"developer_token"`
	ClientId       types.String `tfsdk:"client_id",json:"client_id"`
	ClientSecret   types.String `tfsdk:"client_secret",json:"client_secret"`
	AccessToken    types.String `tfsdk:"access_token",json:"access_token"`
	RefreshToken   types.String `tfsdk:"refresh_token",json:"refresh_token"`
}

func GenTFSchemaCredentials() schema.SingleNestedBlock {
	return schema.SingleNestedBlock{Attributes: map[string]schema.Attribute{
		"access_token": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"client_id": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"client_secret": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"developer_token": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
		"refresh_token": schema.StringAttribute{
			Description: "",
			Optional:    true,
		},
	}}
}
